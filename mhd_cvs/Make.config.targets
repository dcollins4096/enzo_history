#=======================================================================
#
# FILE:        Make.config.targets
#
# SUMMARY:     Make targets for managing configuration settings
#
# AUTHOR:      James Bordner (jobordner@ucsd.edu)
#
# DATE:        2007-02-21
#
# DESCRIPTION  See 'gmake help-config' for definitive description of targets
#
#-----------------------------------------------------------------------

#-----------------------------------------------------------------------
help-config:
	@echo "========================================================================"
	@echo "       Enzo Configuration Help"
	@echo "========================================================================"
	@echo
	@echo "   Set integer size"
	@echo
	@echo "	gmake integers-32"
	@echo "	gmake integers-64"
	@echo
	@echo "   Set floating-point precision"
	@echo
	@echo "	gmake precision-32"
	@echo "	gmake precision-64"
	@echo
	@echo "   Set particle position precision"
	@echo
	@echo "	gmake particles-32"
	@echo "	gmake particles-64"
	@echo "	gmake particles-128"
	@echo
	@echo "   Set inits precision"
	@echo
	@echo "	gmake inits-32"
	@echo "	gmake inits-64"
	@echo
	@echo "   Set IO precision"
	@echo
	@echo "	gmake io-32"
	@echo "	gmake io-64"
	@echo
	@echo "   Set whether to use MPI"
	@echo
	@echo "	gmake use-mpi-yes"
	@echo "	gmake use-mpi-no"
	@echo
	@echo "   Set HDF5 endian type"
	@echo
	@echo "	gmake hdf5-endian-big"
	@echo "	gmake hdf5-endian-little"
	@echo
	@echo "   Set whether to use SRB hooks"
	@echo
	@echo "	gmake srb-yes"
	@echo "	gmake srb-no"
	@echo
	@echo "   Set whether to use MPICH performance mod"
	@echo
	@echo "	gmake mpich-yes"
	@echo "	gmake mpich-no"
	@echo
	@echo "   Set address/pointer size"
	@echo
	@echo "	gmake object-mode-32"
	@echo "	gmake object-mode-64"
	@echo
	@echo "   Set whether to use unigrid taskmap performance mod"
	@echo
	@echo "	gmake taskmap-yes"
	@echo "	gmake taskmap-no"
	@echo
	@echo "   Set whether to use 'packed AMR' mods"
	@echo
	@echo "	gmake packed-amr-yes"
	@echo "	gmake packed-amr-no"
	@echo
	@echo "   Set whether to compile gravity isolating b.c. code"
	@echo
	@echo "	gmake iso-grav-yes"
	@echo "	gmake iso-grav-no"
	@echo
	@echo "   Set whether to compile radiation hydrodynamics code"
	@echo
	@echo "	gmake rad-hydro-yes"
	@echo "	gmake rad-hydro-no"
	@echo
	@echo "   Set whether to call jbPerf performance tool"
	@echo
	@echo "	gmake jbperf-yes"
	@echo "	gmake jbperf-no"
	@echo
	@echo "   Set whether to perform unigrid communication transpose"
	@echo
	@echo "	gmake unigrid-transpose-yes"
	@echo "	gmake unigrid-transpose-no"
	@echo
	@echo "   Set whether to use out-of-core handling of the boundary"
	@echo
	@echo "	gmake ooc-boundary-yes"
	@echo "	gmake ooc-boundary-no"
	@echo
	@echo "   Set optimization/debug/warning levels"
	@echo
	@echo "	gmake opt-warn"
	@echo "	gmake opt-debug"
	@echo "	gmake opt-high"
	@echo "	gmake opt-aggressive"
	@echo 
	@echo "   Set PPML define, include objects"
	@echo
	@echo " gmake ppml-yes"
	@echo " gmake ppml-no"
	@echo
	@echo "   Define the jbMem memory monitory"
	@echo 
	@echo " gmake jbmem-yes"
	@echo " gmake jbmem-no"
	@echo

#-----------------------------------------------------------------------

show-flags:
	@echo "CPP = `which $(CPP)`"
	@echo "CC  = `which $(CC)`"
	@echo "CXX = `which $(CXX)`"
	@echo "FC  = `which $(FC)`"
	@echo "F90 = `which $(F90)`"
	@echo "LD  = `which $(LD)`"
	@echo ""
	@echo "DEFINES = $(DEFINES)"
	@echo ""
	@echo "INCLUDES = $(INCLUDES)"
	@echo ""
	@echo "CPPFLAGS = $(CPPFLAGS)"
	@echo "CFLAGS   = $(CFLAGS)"
	@echo "CXXFLAGS = $(CXXFLAGS)"
	@echo "FFLAGS   = $(FFLAGS)"
	@echo "F90FLAGS = $(F90FLAGS)"
	@echo "LDFLAGS  = $(LDFLAGS)"
	@echo ""
	@echo "LIBS     = $(LIBS)"

#-----------------------------------------------------------------------

show-config:
	@echo
	@echo "   MACHINE: $(MACH_TEXT)"
	@echo
	@echo "   CONFIG_PRECISION:         $(CONFIG_PRECISION)"
	@echo "   CONFIG_PARTICLES:         $(CONFIG_PARTICLES)"
	@echo "   CONFIG_INTEGERS:          $(CONFIG_INTEGERS)" 
	@echo "   CONFIG_INITS:             $(CONFIG_INITS)"
	@echo "   CONFIG_IO:                $(CONFIG_IO)"
	@echo "   CONFIG_USE_MPI:           $(CONFIG_USE_MPI)"
	@echo "   CONFIG_HDF5_ENDIAN:       $(CONFIG_HDF5_ENDIAN)"
	@echo "   CONFIG_SRB:               $(CONFIG_SRB)"
	@echo "   CONFIG_MPICH:             $(CONFIG_MPICH)"
	@echo "   CONFIG_OBJECT_MODE:       $(CONFIG_OBJECT_MODE)"
	@echo "   CONFIG_TASKMAP:           $(CONFIG_TASKMAP)"
	@echo "   CONFIG_PACKED_AMR:        $(CONFIG_PACKED_AMR)"
	@echo "   CONFIG_ISO_GRAV:          $(CONFIG_ISO_GRAV)"
	@echo "   CONFIG_RAD_HYDRO:         $(CONFIG_RAD_HYDRO)"
	@echo "   CONFIG_JBPERF:            $(CONFIG_JBPERF)"
	@echo "   CONFIG_UNIGRID_TRANSPOSE: $(CONFIG_UNIGRID_TRANSPOSE)"
	@echo "   CONFIG_OOC_BOUNDARY:      $(CONFIG_OOC_BOUNDARY)"
	@echo "   CONFIG_PPML:              $(CONFIG_PPML)"
	@echo "   CONFIG_JBMEM:             $(CONFIG_JBMEM)"
	@echo "   CONFIG_OPT:               $(CONFIG_OPT)"
	@echo

#-----------------------------------------------------------------------

show-version:
	@echo "SVN Branch   `svn info $(TOP_DIR) | awk '/URL/{print $$2}'`"
	@echo "SVN Revision `svn info $(TOP_DIR) | awk '/Revision/{print $$2}'`"

#-----------------------------------------------------------------------
.PHONY: default

default:
	@rm -f $(MAKE_CONFIG_OVERRIDE)
	@touch $(MAKE_CONFIG_OVERRIDE)
	@$(MAKE) -f $(THIS) show-config

#-----------------------------------------------------------------------

machine-%:
	@if [ -e Make.mach.$* ]; then \
           tmp=.config.temp; \
           grep -v CONFIG_MACHINE $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
           mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
           echo "CONFIG_MACHINE = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	   $(MAKE) -f $(THIS) show-config | grep MACHINE; \
	else \
           echo; \
	   echo "   No such machine file "'"'"Make.mach.$*"'"'; \
           echo; \
        fi
#-----------------------------------------------------------------------

VALID_INTEGERS = integers-32 integers-64
.PHONY: $(VALID_INTEGERS)

integers-32: CONFIG_INTEGERS-32
integers-64: CONFIG_INTEGERS-64
integers-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_INTEGERS)]\n\n"
CONFIG_INTEGERS-%:
	@tmp=.config.temp; \
	grep -v CONFIG_INTEGERS $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
	mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
	echo "CONFIG_INTEGERS = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_INTEGERS

#-----------------------------------------------------------------------

VALID_PRECISION = precision-32 precision-64
.PHONY: $(VALID_PRECISION)

precision-32: CONFIG_PRECISION-32
precision-64: CONFIG_PRECISION-64
precision-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_PRECISION)]\n\n"
CONFIG_PRECISION-%:
	@tmp=.config.temp; \
        grep -v CONFIG_PRECISION $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_PRECISION = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_PRECISION

#-----------------------------------------------------------------------

VALID_PARTICLES = particles-32 particles-64 particles-128
.PHONY: $(VALID_PARTICLES)
.PHONE: particles-%

particles-32:  CONFIG_PARTICLES-32
particles-64:  CONFIG_PARTICLES-64
particles-128: CONFIG_PARTICLES-128
particles-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_PARTICLES)]\n\n"
CONFIG_PARTICLES-%:
	@tmp=.config.temp; \
        grep -v CONFIG_PARTICLES $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_PARTICLES = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_PARTICLES

#-----------------------------------------------------------------------

VALID_INITS = inits-32 inits-64
.PHONY: $(VALID_INITS)

inits-32: CONFIG_INITS-32
inits-64: CONFIG_INITS-64
inits-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_INITS)]\n\n"
CONFIG_INITS-%:
	@tmp=.config.temp; \
        grep -v CONFIG_INITS $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_INITS = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_INITS

#-----------------------------------------------------------------------

VALID_IO = io-32 io-64
.PHONY: $(VALID_IO)

io-32: CONFIG_IO-32
io-64: CONFIG_IO-64
io-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_IO)]\n\n"
CONFIG_IO-%:
	@tmp=.config.temp; \
        grep -v CONFIG_IO $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_IO = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_IO

#-----------------------------------------------------------------------

VALID_USE-MPI = use-mpi-yes use-mpi-no
.PHONY: $(VALID_USE-MPI)

use-mpi-yes: CONFIG_USE-MPI-yes
use-mpi-no: CONFIG_USE-MPI-no
use-mpi-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_USE-MPI)]\n\n"
CONFIG_USE-MPI-%:
	@tmp=.config.temp; \
        grep -v CONFIG_USE_MPI $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_USE_MPI = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_USE_MPI

#-----------------------------------------------------------------------

VALID_HDF5-ENDIAN = hdf5-endian-big hdf5-endian-little
.PHONY: $(VALID_HDF5-ENDIAN)

hdf5-endian-big: CONFIG_HDF5-ENDIAN-big
hdf5-endian-little: CONFIG_HDF5-ENDIAN-little
hdf5-endian-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_HDF5-ENDIAN)]\n\n"
CONFIG_HDF5-ENDIAN-%:
	@tmp=.config.temp; \
        grep -v CONFIG_HDF5_ENDIAN $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_HDF5_ENDIAN = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_HDF5_ENDIAN

#-----------------------------------------------------------------------

VALID_SRB = srb-yes srb-no
.PHONY: $(VALID_SRB)

srb-yes: CONFIG_SRB-yes
srb-no: CONFIG_SRB-no
srb-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_SRB)]\n\n"
CONFIG_SRB-%:
	@tmp=.config.temp; \
        grep -v CONFIG_SRB $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_SRB = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_SRB

#-----------------------------------------------------------------------

VALID_MPICH = mpich-yes mpich-no
.PHONY: $(VALID_MPICH)

mpich-yes: CONFIG_MPICH-yes
mpich-no: CONFIG_MPICH-no
mpich-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_MPICH)]\n\n"
CONFIG_MPICH-%:
	@tmp=.config.temp; \
        grep -v CONFIG_MPICH $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_MPICH = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_MPICH

#-----------------------------------------------------------------------

VALID_OBJECT-MODE = object-mode-32 object-mode-64
.PHONY: $(VALID_OBJECT-MODE)

object-mode-32: CONFIG_OBJECT-MODE-32
object-mode-64: CONFIG_OBJECT-MODE-64
object-mode-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_OBJECT-MODE)]\n\n"
CONFIG_OBJECT-MODE-%:
	@tmp=.config.temp; \
        grep -v CONFIG_OBJECT_MODE $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_OBJECT_MODE = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_OBJECT_MODE

#-----------------------------------------------------------------------

VALID_TASKMAP = taskmap-yes taskmap-no
.PHONY: $(VALID_TASKMAP)

taskmap-yes: CONFIG_TASKMAP-yes
taskmap-no: CONFIG_TASKMAP-no
taskmap-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_TASKMAP)]\n\n"
CONFIG_TASKMAP-%:
	@tmp=.config.temp; \
        grep -v CONFIG_TASKMAP $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_TASKMAP = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_TASKMAP

#-----------------------------------------------------------------------

VALID_PACKED-AMR = packed-amr-yes packed-amr-no
.PHONY: $(VALID_PACKED-AMR)

packed-amr-yes: CONFIG_PACKED-AMR-yes
packed-amr-no: CONFIG_PACKED-AMR-no
packed-amr-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_PACKED-AMR)]\n\n"
CONFIG_PACKED-AMR-%:
	@tmp=.config.temp; \
        grep -v CONFIG_PACKED_AMR $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_PACKED_AMR = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_PACKED_AMR

#-----------------------------------------------------------------------

VALID_ISO-GRAV = iso-grav-yes iso-grav-no
.PHONY: $(VALID_ISO-GRAV)

iso-grav-yes: CONFIG_ISO-GRAV-yes
iso-grav-no: CONFIG_ISO-GRAV-no
iso-grav-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_ISO-GRAV)]\n\n"
CONFIG_ISO-GRAV-%:
	@tmp=.config.temp; \
        grep -v CONFIG_ISO_GRAV $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_ISO_GRAV = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_ISO_GRAV

#-----------------------------------------------------------------------

VALID_RAD-HYDRO = rad-hydro-yes rad-hydro-no
.PHONY: $(VALID_RAD-HYDRO)

rad-hydro-yes: CONFIG_RAD-HYDRO-yes
rad-hydro-no: CONFIG_RAD-HYDRO-no
rad-hydro-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_RAD-HYDRO)]\n\n"
CONFIG_RAD-HYDRO-%:
	@tmp=.config.temp; \
        grep -v CONFIG_RAD_HYDRO $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_RAD_HYDRO = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_RAD_HYDRO

#-----------------------------------------------------------------------

VALID_JBPERF = jbperf-yes jbperf-no
.PHONY: $(VALID_JBPERF)

jbperf-yes: CONFIG_JBPERF-yes
jbperf-no: CONFIG_JBPERF-no
jbperf-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_JBPERF)]\n\n"
CONFIG_JBPERF-%:
	@tmp=.config.temp; \
        grep -v CONFIG_JBPERF $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_JBPERF = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_JBPERF

#-----------------------------------------------------------------------

VALID_UNIGRID-TRANSPOSE = unigrid-transpose-yes unigrid-transpose-no
.PHONY: $(VALID_UNIGRID-TRANSPOSE)

unigrid-transpose-yes: CONFIG_UNIGRID-TRANSPOSE-yes
unigrid-transpose-no: CONFIG_UNIGRID-TRANSPOSE-no
unigrid-transpose-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_UNIGRID-TRANSPOSE)]\n\n"
CONFIG_UNIGRID-TRANSPOSE-%:
	@tmp=.config.temp; \
        grep -v CONFIG_UNIGRID_TRANSPOSE $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_UNIGRID_TRANSPOSE = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_UNIGRID_TRANSPOSE

#-----------------------------------------------------------------------

VALID_OOC-BOUNDARY = ooc-boundary-yes ooc-boundary-no
.PHONY: $(VALID_OOC-BOUNDARY)

ooc-boundary-yes: CONFIG_OOC-BOUNDARY-yes
ooc-boundary-no: CONFIG_OOC-BOUNDARY-no
ooc-boundary-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_OOC-BOUNDARY)]\n\n"
CONFIG_OOC-BOUNDARY-%:
	@tmp=.config.temp; \
        grep -v CONFIG_OOC_BOUNDARY $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_OOC_BOUNDARY = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_OOC_BOUNDARY

#-----------------------------------------------------------------------

VALID_PPML = ppml-yes ppml-no
.PHONY: $(VALID_PPML)

ppml-yes: CONFIG_PPML-yes
ppml-no: CONFIG_PPML-no
ppml-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_PPML)]\n\n"
CONFIG_PPML-%:
	@tmp=.config.temp; \
        grep -v CONFIG_PPML $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_PPML = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_PPML

#-----------------------------------------------------------------------

VALID_JBMEM = jbmem-yes jbmem-no
.PHONY: $(VALID_JBMEM)

jbmem-yes: CONFIG_JBMEM-yes
jbmem-no: CONFIG_JBMEM-no
jbmem-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_JBMEM)]\n\n"
CONFIG_JBMEM-%:
	@tmp=.config.temp; \
        grep -v CONFIG_JBMEM $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_JBMEM = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_JBMEM
#-----------------------------------------------------------------------


VALID_OPT = opt-warn opt-debug opt-high opt-aggressive
.PHONY: $(VALID_OPT)

opt-warn:       CONFIG_OPT-warn
opt-debug:      CONFIG_OPT-debug
opt-high:       CONFIG_OPT-high
opt-aggressive: CONFIG_OPT-aggressive
opt-%:
	@printf "\n\tInvalid target: $@\n\n\tValid targets: [$(VALID_OPT)]\n\n"
CONFIG_OPT-%:
	@tmp=.config.temp; \
        grep -v CONFIG_OPT $(MAKE_CONFIG_OVERRIDE) > $${tmp}; \
        mv $${tmp} $(MAKE_CONFIG_OVERRIDE); \
        echo "CONFIG_OPT = $*" >> $(MAKE_CONFIG_OVERRIDE); \
	$(MAKE) -f $(THIS) show-config | grep CONFIG_OPT
