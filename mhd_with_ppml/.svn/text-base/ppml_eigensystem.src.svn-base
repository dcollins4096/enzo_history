
c\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
c\\\\\\\\\\\\\\\\\\\\\\\\\\ EIGENVALUE - X ////////////////////////////
c//////////////////////////////////////////////////////////////////////
c
c     comute eigenvalue in x direction 
c
c     qu - primitive vector
c     u  - eigenvalue vector
c
      SUBROUTINE VECTEGx(QU,U,a2)
      implicit none
c     --- variables. dcc
      real DLT,BMG,BVX,BVZ,BYZ,BXX,BVY,CKV,CF,CSR,CSV,GPP,SBB
      real GPB,DSCV,VA,SK1,CWH,CS,VAX,VAZ,VAY,VS2,VF2,VAH
      real a2
c     --- /dcc
      REAL QU(7),U(7)  	

c      common/aspd/a1,a2  

      DLT=1.E-7

      SK1=SQRT(QU(1))
      BVX=QU(5)/SK1
      BVY=QU(6)/SK1
      BVZ=QU(7)/SK1
      VAX=BVX**2
      VAY=BVY**2
      VAZ=BVZ**2
      VAH=VAX+VAY+VAZ
      CKV=a2
      if(ckv.lt.0) write(*,*) "ppml_standalone, cvk<0 4"
      CSR=SQRT(CKV)
      CSV=CKV+VAH
      CWH=CKV-VAH
      DSCV=CSV**2-4.*CKV*VAX
      IF(DSCV.LT.0.) DSCV=0.
      DSCV=SQRT(DSCV)
      VF2=(CSV+DSCV)/2.
      VS2=(CSV-DSCV)/2.
      IF(VS2.LT.0.) VS2=0.
      CF=SQRT(VF2)
      CS=SQRT(VS2)
      VA=ABS(BVX)

      BXX=QU(5)**2
      BYZ=QU(6)**2+QU(7)**2
      SBB=SQRT(BYZ)
      BMG=BXX+BYZ
      GPP=a2*QU(1)
      GPB=ABS(GPP-BXX)

      IF(BYZ.LE.DLT*BMG) THEN

         IF(GPB.GT.DLT*GPP) THEN
            CS=SQRT(abs((CKV+VAX-SIGN(1.,CWH)*CWH)/2.))
            CF=SQRT(abs((CKV+VAX+SIGN(1.,CWH)*CWH)/2.))
         ELSE
            CS=CSR
            CF=CSR
         ENDIF

      ENDIF

      U(1)=QU(2)-CF 
      U(2)=QU(2)-VA
      U(3)=QU(2)-CS
      U(4)=QU(2)
      U(5)=QU(2)+CS
      U(6)=QU(2)+VA
      U(7)=QU(2)+CF 

      RETURN
      END

c\\\\\\\\\\\\\\\\\\\\\\ END EIGENVALUE - X ////////////////////////////


c\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
c\\\\\\\\\\\\\\\\\\\\\\\\\\ EIGENVECTOR - X ///////////////////////////
c//////////////////////////////////////////////////////////////////////
c
c     compute eigenvector in x direction 
c
c     qu - vector of primitives 
c     ql - left eigenvector
c     qr - right eigenvector
c     u  - vector of eigenvalues 

      SUBROUTINE VECTLRx(QU,QL,QR,U,a2)
      implicit none
c     --- variables.
c     --- sound speed, sound speed squared
      real a1, a2
      real DLT,AS,BMG,ASS,AF,BVX,BVY,BXX,BYZ,BZ,BY,CD2
      real CS,CSR,CKV,CF,CA,BVZ,BSGN,CWH,GPB,DSCV,SK1,SBB
      real VAY,VAX,VAH,VF2,VS2,X22,VAZ,GPP,CSV

      REAL QU(7),QL(7,7),QR(7,7),U(7)  	
c     dcc
c     common/aspd/a1,a2  
c     /dcc
      DLT=1.E-7
      X22=1./SQRT(2.)
 	
      SK1=SQRT(QU(1))
      BVX=QU(5)/SK1
      BVY=QU(6)/SK1
      BVZ=QU(7)/SK1
      VAX=BVX**2
      VAY=BVY**2
      VAZ=BVZ**2
      VAH=VAX+VAY+VAZ
      CKV=a2
      if(CKV.lt.0.) write(*,*) "ppml_standalone, cvk<0 1"
      CSR=SQRT(CKV)
      CSV=CKV+VAH
      CWH=CKV-VAH
      DSCV=CSV**2-4.*CKV*VAX
      IF(DSCV.LT.0.) DSCV=0.
      DSCV=SQRT(DSCV)
      VF2=(CSV+DSCV)/2.
      VS2=(CSV-DSCV)/2.
      IF(VS2.LT.0.) VS2=0.
      CF=SQRT(VF2)
      CS=SQRT(VS2)
      CA=ABS(BVX)

      BXX=QU(5)**2
      BYZ=QU(6)**2+QU(7)**2
      SBB=SQRT(BYZ)
      BMG=BXX+BYZ
      GPP=a2*QU(1)
      GPB=ABS(GPP-BXX)

      IF(BYZ.GT.DLT*BMG) THEN

         ASS=SQRT(CWH**2+4.*CKV*(VAY+VAZ))
         AS=SQRT(abs((1.-CWH/ASS)/2.))
         AF=SQRT(abs((1.+CWH/ASS)/2.))

         BY=QU(6)/SBB
         BZ=QU(7)/SBB

      ELSE

         IF(GPB.GT.DLT*GPP) THEN
            AS=SQRT(abs((1.-SIGN(1.,CWH))/2.))
            AF=SQRT(abs((1.+SIGN(1.,CWH))/2.))
            CS=SQRT(abs((CKV+VAX-SIGN(1.,CWH)*CWH)/2.))
            CF=SQRT(abs((CKV+VAX+SIGN(1.,CWH)*CWH)/2.))
         ELSE
            AS=X22
            AF=X22
            CS=CSR
            CF=CSR  
         ENDIF

         BY=X22
         BZ=X22

      ENDIF

      BSGN=SIGN(1.,QU(5))
      CD2=2.*CKV
	
      QL(1,1)=AF/2.
      QL(1,2)=-QU(1)*AF*CF/CD2
      QL(1,3)=QU(1)*AS*CS*BY*BSGN/CD2
      QL(1,4)=QU(1)*AS*CS*BZ*BSGN/CD2
      QL(1,5)=0.
      QL(1,6)=SK1*CSR*AS*BY/CD2
      QL(1,7)=SK1*CSR*AS*BZ/CD2
	
      QL(2,1)=0.
      QL(2,2)=0.
      QL(2,3)=-QU(1)*BZ*BSGN/2.
      QL(2,4)=QU(1)*BY*BSGN/2.
      QL(2,5)=0.
      QL(2,6)=-SK1*BZ/2.
      QL(2,7)=SK1*BY/2.

      QL(3,1)=AS/2.
      QL(3,2)=-QU(1)*AS*CS/CD2
      QL(3,3)=-QU(1)*AF*CF*BY*BSGN/CD2
      QL(3,4)=-QU(1)*AF*CF*BZ*BSGN/CD2
      QL(3,5)=0.
      QL(3,6)=-SK1*CSR*AF*BY/CD2
      QL(3,7)=-SK1*CSR*AF*BZ/CD2

      QL(4,1)=0.
      QL(4,2)=0.
      QL(4,3)=0.
      QL(4,4)=0.
      QL(4,5)=1.
      QL(4,6)=0.
      QL(4,7)=0.

      QL(5,1)=AS/2.
      QL(5,2)=QU(1)*AS*CS/CD2
      QL(5,3)=QU(1)*AF*CF*BY*BSGN/CD2
      QL(5,4)=QU(1)*AF*CF*BZ*BSGN/CD2
      QL(5,5)=0.
      QL(5,6)=-SK1*CSR*AF*BY/CD2
      QL(5,7)=-SK1*CSR*AF*BZ/CD2

      QL(6,1)=0.
      QL(6,2)=0.
      QL(6,3)=-QU(1)*BZ*BSGN/2.
      QL(6,4)=QU(1)*BY*BSGN/2.
      QL(6,5)=0.
      QL(6,6)=SK1*BZ/2.
      QL(6,7)=-SK1*BY/2.

      QL(7,1)=AF/2.
      QL(7,2)=QU(1)*AF*CF/CD2
      QL(7,3)=-QU(1)*AS*CS*BY*BSGN/CD2
      QL(7,4)=-QU(1)*AS*CS*BZ*BSGN/CD2
      QL(7,5)=0.
      QL(7,6)=SK1*CSR*AS*BY/CD2
      QL(7,7)=SK1*CSR*AS*BZ/CD2
	

      QR(1,1)=AF
      QR(1,2)=0.
      QR(1,3)=AS
      QR(1,4)=0.
      QR(1,5)=AS
      QR(1,6)=0.
      QR(1,7)=AF

      QR(2,1)=-AF*CF/QU(1)
      QR(2,2)=0.
      QR(2,3)=-AS*CS/QU(1)
      QR(2,4)=0.
      QR(2,5)=AS*CS/QU(1)
      QR(2,6)=0.
      QR(2,7)=AF*CF/QU(1)

      QR(3,1)=AS*CS*BY*BSGN/QU(1)
      QR(3,2)=-BZ*BSGN/QU(1)
      QR(3,3)=-AF*CF*BY*BSGN/QU(1)
      QR(3,4)=0.
      QR(3,5)=AF*CF*BY*BSGN/QU(1)
      QR(3,6)=-BZ*BSGN/QU(1)
      QR(3,7)=-AS*CS*BY*BSGN/QU(1)

      QR(4,1)=AS*CS*BZ*BSGN/QU(1)
      QR(4,2)=BY*BSGN/QU(1)
      QR(4,3)=-AF*CF*BZ*BSGN/QU(1)
      QR(4,4)=0.
      QR(4,5)=AF*CF*BZ*BSGN/QU(1)
      QR(4,6)=BY*BSGN/QU(1)
      QR(4,7)=-AS*CS*BZ*BSGN/QU(1)

      QR(5,1)=0.
      QR(5,2)=0.
      QR(5,3)=0.
      QR(5,4)=1.
      QR(5,5)=0.
      QR(5,6)=0.
      QR(5,7)=0.

      QR(6,1)=AS*BY*CSR/SK1
      QR(6,2)=-BZ/SK1
      QR(6,3)=-AF*BY*CSR/SK1
      QR(6,4)=0.
      QR(6,5)=-AF*BY*CSR/SK1
      QR(6,6)=BZ/SK1
      QR(6,7)=AS*BY*CSR/SK1

      QR(7,1)=AS*BZ*CSR/SK1
      QR(7,2)=BY/SK1
      QR(7,3)=-AF*BZ*CSR/SK1
      QR(7,4)=0.
      QR(7,5)=-AF*BZ*CSR/SK1
      QR(7,6)=-BY/SK1
      QR(7,7)=AS*BZ*CSR/SK1

      U(1)=QU(2)-CF 
      U(2)=QU(2)-CA
      U(3)=QU(2)-CS
      U(4)=QU(2)
      U(5)=QU(2)+CS
      U(6)=QU(2)+CA
      U(7)=QU(2)+CF 

      RETURN
      END

c\\\\\\\\\\\\\\\\\\\\\\\\\\ EIGENVECTOR - X ///////////////////////////
