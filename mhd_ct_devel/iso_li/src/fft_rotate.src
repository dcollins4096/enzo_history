*****************************************************************************
*                                                                           *
* Copyright 2004 Greg Bryan                                                 *
* Copyright 2004 Laboratory for Computational Astrophysics                  *
* Copyright 2004 Board of Trustees of the University of Illinois            *
* Copyright 2004 Regents of the University of California                    *
*                                                                           *
* This software is released under the terms of the "Enzo Public License"    *
* in the accompanying LICENSE file.                                         *
*                                                                           *
*****************************************************************************

! ======================================================================
      subroutine rotate2d(x,n1,n2,y)
! ======================================================================

      implicit none

      integer n1,n2
      complex x(n1,n2), y(n2,n1)

      integer i,j
      integer ii,jj
      integer ib,jb
      integer bs

      bs = 64
      ib = n1/max(n1/bs,1)
      jb = n2/max(n2/bs,1)

      do ii=1,n1,ib
        do jj=1,n2,jb

          do i=ii,min(ii+ib-1,n1)
            do j=jj,min(jj+jb-1,n2)
              y(j,i) = x(i,j)
            end do
          end do 

        end do
      end do

  666 continue

      return
      end
! ======================================================================
      subroutine rotate3d(x,n1,n2,n3,y)
! ======================================================================

      implicit none

      integer n1,n2,n3
      complex x(n1,n2,n3), y(n2,n3,n1)

      integer i,j,k
      integer ii,jj,kk
      integer ib,jb,kb
      integer bs

      bs = 64

      ib=n1/max(n1/bs,1)
      jb=n2/max(n2/bs,1)
      kb=n3/max(n3/bs,1)

      do ii=1,n1,ib
        do kk=1,n3,kb
          do jj=1,n2,jb

            do i=ii,min(ii+ib-1,n1)
              do k=kk,min(kk+kb-1,n3)
                do j=jj,min(jj+jb-1,n2)
                  y(j,k,i) = x(i,j,k)
                end do
              end do 
            end do

          end do
        end do
      end do

  666 continue

      return
      end
