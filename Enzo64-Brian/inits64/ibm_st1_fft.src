#ifdef SP2

#ifdef r4

      subroutine ibm_st1(x, n1, idir)

      implicit none

      integer :: n1, idir
      complex :: x(n1)

      real :: factor
      real :: scale
      real*8, allocatable :: aux1(:), aux2(:)

      integer :: inc1x, inc2x, inc1y, inc2y
      integer :: naux1, naux2, jdir, mult

      jdir = -idir
      mult = 1
      inc1x = 1
      inc2x = 0
      inc1y = 1
      inc2y = 0

! SCFT

      if( n1 <= 8192 ) then
        naux1 = 20000
      else
        naux1 = 20000+(1.14)*n1
      end if

      if( n1 <= 8192 ) then
        naux2 = 20000
      else
        naux2 = 20000+(1.14)*n1
      end if 

      allocate ( aux1(naux1) )
      allocate ( aux2(naux2) )

      factor = 1.0/real(n1)

      if( jdir == 1 ) then
        scale = 1.0d-00
      else
        scale = factor
      end if

      call scft(1,x,1,0,x,1,0,n1,1,jdir,scale,aux1,naux1,aux2,naux2)
      call scft(0,x,1,0,x,1,0,n1,1,jdir,scale,aux1,naux1,aux2,naux2)

      deallocate ( aux1 )
      deallocate ( aux2 )

      return
      end

#endif




#ifdef r8

      subroutine ibm_st1(x, n1, idir)

      implicit none

      integer :: n1, idir
      complex :: x(n1)

      real :: factor
      real :: scale
      real*8, allocatable :: aux1(:), aux2(:)

      integer :: inc1x, inc2x, inc1y, inc2y
      integer :: naux1, naux2, jdir, mult

      jdir = -idir
      mult = 1
      inc1x = 1
      inc2x = 0
      inc1y = 1
      inc2y = 0

! DCFT

      if( n1 <= 2048 ) then
        naux1 = 20000
      else
        naux1 = 20000+(2.28)*n1
      end if

      if( n1 <= 2048 ) then
        naux2 = 20000
      else
        naux2 = 20000+(2.28)*n1
      end if

      allocate ( aux1(naux1) )
      allocate ( aux2(naux2) )

      factor = 1.0/real(n1)

      if( jdir == 1 ) then
        scale = 1.0d-00
      else
        scale = factor
      end if

      call dcft(1,x,1,0,x,1,0,n1,1,jdir,scale,aux1,naux1,aux2,naux2)
      call dcft(0,x,1,0,x,1,0,n1,1,jdir,scale,aux1,naux1,aux2,naux2)

      deallocate ( aux1 )
      deallocate ( aux2 )

      return
      end

#endif

#else

      subroutine ibm_st1(x, n1, idir)

      implicit none

      integer :: n1, idir
      complex :: x(n1)

      write(0,'("IBM stride 1 FFT error")')
      call stop_all_cpus

      return
      end

#endif
