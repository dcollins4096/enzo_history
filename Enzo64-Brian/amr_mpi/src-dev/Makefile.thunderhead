#=======================================================================
#  MAKEFILE FOR ENZO V64.5
#  Robert Harkness, 1st December 2005
#=======================================================================
#
# ENZO_PPR is one of p4 (single), p8 (double) or p16 (quad) for
#          precision of position
# ENZO_XPR is r4 (32 bits) or r8 (64 bits) for float and real and must
#          MUST be <= precision of position
# FORTPR   defines how Fortran real precision is specified to the
#          compiler e.g. SGI -r8; IBM -qrealsize=8
# INIT_PPR is the precision of the data generated by inits
#          STRONG RECOMMENDATION: always use 64-bit inits
#          and always set INIT_PPR := INITS64
#
# The process of building ENZO executables can be controlled by setting
# the following environment variables:
#
# name       default     allowed values
# ENZO_PPR   p8          p4, p8, p16
# ENZO_XPR   r8          r4, r8
# ENZO_HDF   hdf5        hdf5, hdf4 withdrawn
# ENZO_SRB   no_srb      use_srb, no_srb
# ENZO_AMR   adaptive    adaptive, unigrid (for fast transpose only)
# ENZO_END   HDF5_BE     HDF5_BE, HDF4_LE (not recommended)
# INIT_PPR   INITS64     INITS64, INITS32 (not recommended)
# MPICH_GM   no          yes, no (optimization for single-thread mpich-gm)
# PACK_AMR   no          yes, no
# TP_VEL     no          yes, no (tracer particle velocity output)
# PREC_IO    no          yes, no (retain full precision in I/O)
# ISO_GRAV   yes         yes, no (isolated boundary conditions)
#
# The makefile will attempt to determine the operating system and
# its default message-passing library (in most cases MPI), but by
# setting the following environment variables one can easily
# experiment with new systems. All that is required is consistency
# in the naming convention, and machine-specific include files
# for HDF4 or HDF5.  It may also be necessary to specify FORTPR.
#
# ENZO_ARCH  auto        anything you like (e.g. cray_x1)
# ENZO_MESS  auto        mpi, vmi, mpich etc.

# Constants - do not edit!
null :=
hdf4 := hdf4
hdf5 := hdf5
no_srb := no_srb
unigrid := unigrid
adaptive := adaptive

# Settings - change at will
#ENZO_INT := LARGE_INTS
ENZO_INT := SMALL_INTS
ENZO_AMR := unigrid
INIT_PPR := INITS64
MPICH_GM := yes
PACK_AMR := yes
ENZO_XPR := r4
ENZO_PPR := p8
PREC_IO := no
TP_VEL   := yes
# NOTE: leave this non-functional until Brian says otherwise!
ISO_GRAV := yes


# All the bells and whistles
#AMR_OPT := -D SIB1 -D SIB2 -D SIB3 -D SIB4 -D FLUX_FIX -D SAB -D DC_OPT_SIBSUB -D JB_OPT_FAST_NEIGHBOR_SEARCH

# These settings used with the 500 Mpc 512^3 AMR, i.e. disable new flux correction
AMR_OPT := -D SIB1 -D SIB2 -D SIB3 -D SIB4 -D NO_FLUX_FIX -D NO_SAB -D JB_OPT_FAST_NEIGHBOR_SEARCH

#AMR_OPT :=
#OOC_OPT := -D OOC_BOUNDARY

ifeq ($(ENZO_PPR),$(null))
  ENZO_PPR := p8
endif
ifeq ($(ENZO_XPR),$(null))
  ENZO_XPR := r4
endif

ifeq ($(PREC_IO),no)
  IOP := IO32_
endif
ifeq ($(PREC_IO),yes)
  IOP := IO64_
endif

# In some pathological cases this may need to be set explicitly

#SYSTEM := BGL

SYSTEM := $(shell uname -s)
UNAMEM := $(shell uname -m)

ifeq ($(ENZO_ARCH),$(null))

ifeq ($(SYSTEM),UNICOS/mp)
  ENZO_ARCH = crayx1
  ENZO_MESS = mpi
  ifeq ($(ENZO_XPR),r8)
    FORTPR = -s real64
  endif
endif

ifeq ($(SYSTEM),IRIX64)
  ENZO_ARCH = irix64
  ENZO_MESS = mpi
  ifeq ($(ENZO_XPR),r8)
    FORTPR = -r8 -r8const -d8
  endif
endif

ifeq ($(SYSTEM),OSF1)
  ENZO_ARCH = osf64
  ENZO_MESS = mpi
  ifeq ($(ENZO_INT),LARGE_INTS)
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -real_size 64 -integer_size 64 -double_size 64 -fpconstant
    else
      FORTPR = -real_size 32 -integer_size 64 -double_size 64 -fpconstant
    endif
  else
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -real_size 64 -integer_size 32 -double_size 64 -fpconstant
    else
      FORTPR = -real_size 32 -integer_size 32 -double_size 64 -fpconstant
    endif
  endif
endif

ifeq ($(SYSTEM),AIX)
  ifeq ($(OBJECT_MODE),$(null))
    ENZO_ARCH = aix32
    ENZO_MESS = mpi
  endif
  ifeq ($(OBJECT_MODE),64)
    ENZO_ARCH = aix64
    ENZO_MESS = mpi
  endif
  ifeq ($(ENZO_INT),LARGE_INTS)
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -qintsize=8 -qrealsize=8 -qdpc=e
    else
      FORTPR = -qintsize=8
    endif
  else
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -qintsize=4 -qrealsize=8 -qdpc=e
    else
      FORTPR = -qintsize=4
    endif
  endif
endif

ifeq ($(SYSTEM),BGL)
  ENZO_ARCH = bgl
  ENZO_MESS = mpi.opt
  ifeq ($(ENZO_INT),LARGE_INTS)
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -qintsize=8 -qrealsize=8 -qdpc=e
    else
      FORTPR = -qintsize=8 -qrealsize=4
    endif
  else
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -qintsize=4 -qrealsize=8 -qdpc=e
    else
      FORTPR = -qintsize=4 -qrealsize=4
    endif
  endif
endif

ifeq ($(SYSTEM),SunOS)
  ENZO_ARCH = sun64
  ENZO_MESS = mpi
  ifeq ($(ENZO_INT),LARGE_INTS)
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -xtypemap=real:64,double:64,integer:64
    else
      FORTPR = -xtypemap=real:32,double:64,integer:64
    endif
  else
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -xtypemap=real:64,double:64,integer:32
    else
      FORTPR = -xtypemap=real:32,double:64,integer:32
    endif
  endif
endif

ifeq ($(SYSTEM),Linux)
  ifeq ($(UNAMEM),ia64)
    ENZO_ARCH = tg64_sdsc_v7
    ENZO_MESS = mpich
  endif
  ifeq ($(UNAMEM),i686)
    ENZO_ARCH = i686
    ENZO_MESS = vmi
  endif
  ifeq ($(ENZO_INT),LARGE_INTS)
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -r8 -i8
    else
      FORTPR = -r4 -i8
    endif
  else
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -r8 -i4
    else
      FORTPR = -r4 -i4
    endif
  endif
endif

ifeq ($(SYSTEM),Darwin)
  ENZO_ARCH = darwin-thunderhead
  ENZO_MESS = mpi
  ifeq ($(ENZO_INT),LARGE_INTS)
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -fdefault-double-8 -fdefault-real-8 -fdefault-integer-8
    else
      FORTPR = -fdefault-integer-8
    endif
  else
    ifeq ($(ENZO_XPR),r8)
      FORTPR = -fdefault-double-8 -fdefault-real-8 
    else
      FORTPR = 
    endif
  endif
endif


endif

ifeq ($(ENZO_SRB),$(null))
  ENZO_SRB := no_srb
endif

ifeq ($(ENZO_HDF),$(null))
  ENZO_HDF := hdf5
endif

ifeq ($(ENZO_AMR),$(null))
  ENZO_AMR := adaptive
endif

ifeq ($(ENZO_END),$(null))
  ENZO_END := HDF5_BE
endif

ifeq ($(SYSTEM),Linux)
  CPP_FLAG := -traditional
endif
ifeq ($(SYSTEM),OSF1)
  CPP_FLAG := -traditional
endif

ifeq ($(MPICH_GM),yes)
  MPI_TUNE := USE_MPICH_MODS
  MGM := MPICH_
else
  MPI_TUNE := NO_MPICH_MODS
  MGM :=
endif

ifeq ($(ENZO_AMR),unigrid)
  UNIGRID := UNIGRID_TRANSPOSE
  EXENAME := enzo5u
endif

ifeq ($(ENZO_AMR),adaptive)
  UNIGRID := NO_UNIGRID_TRANSPOSE
  EXENAME := enzo5
endif

ifeq ($(PACK_AMR),yes)
  PG := GG_
else
  PG :=
endif

ifeq ($(TP_VEL),yes)
  TRACEFLAG := TP_VELOCITY
else
  TRACEFLAG := NO_TP_VELOCITY
endif

ifeq ($(ISO_GRAV),yes)
  GRAVFLAG := ISOLATED_GRAVITY
else
  GRAVFLAG := NO_ISOLATED_GRAVITY
endif


#-------------------  object files  ------------------------------------


#F90X = 	fft90.o

XOBJ =	AdiabaticExpansionInitialize.o			\
	CheckEnergyConservation.o			\
	CheckForOutput.o				\
	CheckForTimeAction.o				\
	CollapseTestInitialize.o			\
	CommunicationBroadcastValue.o			\
	CommunicationBufferedSend.o			\
	CommunicationCombineGrids.o			\
	CommunicationInitialize.o			\
	CommunicationLoadBalanceGrids.o			\
	CommunicationParallelFFT.o			\
	X_CommunicationPartitionGrid.o			\
	CommunicationReceiveFluxes.o			\
	CommunicationSendFluxes.o			\
	CommunicationShareGrids.o			\
	CommunicationTransferParticles.o		\
	CommunicationTranspose.o			\
	CommunicationUpdateStarParticleCount.o		\
	CommunicationUtilities.o			\
	$(MGM)ComputePotentialFieldLevelZero.o		\
	ComputeTable.o					\
	ComputeRandomForcingNormalization.o		\
	CopyOverlappingParticleMassFields.o		\
	CopyOverlappingZones.o				\
	CosmologyComputeExpansionFactor.o		\
	CosmologyComputeExpansionTimestep.o		\
	CosmologyComputeTimeFromRedshift.o		\
	CosmologyGetUnits.o				\
	CosmologyReadParameters.o			\
	CosmologySimulationInitialize.o			\
	NestedCosmologySimulationInitialize.o		\
	CosmologyWriteParameters.o			\
	CreateSUBlingList.o				\
	DeleteFluxes.o					\
	DeleteSUBlingList.o				\
	DepositBaryons.o				\
	DepositParticleMassField.o			\
	DoubleMachInitialize.o				\
	$(MGM)EvolveHierarchy.o				\
	FastSib_EvolveLevel.o				\
	FastSib_$(MGM)EvolveLevelRoutinesOptimized.o	\
	ExternalBoundary_AppendForcingToBaryonFields.o	\
	ExternalBoundary_DetachForcingFromBaryonFields.o\
	ExternalBoundary_IdentifyPhysicalQuantities.o	\
	ExternalBoundary_InitializeExternalBoundaryFaceIO.o	\
	ExternalBoundary_Prepare.o			\
	ExternalBoundary_SetDoubleMachBoundary.o	\
	ExternalBoundary_SetExternalBoundaryIO.o		\
	ExternalBoundary_SetExternalBoundaryParticles.o	\
	ExternalBoundary_SetShockPoolBoundary.o		\
	ExternalBoundary_SetWavePoolBoundary.o		\
	ExternalBoundary_constructor.o			\
	FastFourierTransform.o				\
	FastFourierTransformPrepareComplex.o		\
	FastFourierTransformSGIMATH.o			\
	FastSiblingLocatorInitialize.o			\
	FastSiblingLocatorFinalize.o			\
	FindCube.o					\
	FindField.o					\
	FindSubgrids.o					\
	Gadget.o 					\
	GadgetInitCoolMemory.o 				\
	GadgetIonizeParamsTable.o 			\
	GadgetMakeCoolingTable.o 			\
	GadgetReadIonizeParams.o 			\
	GetUnits.o					\
	GravityEquilibriumTestInitialize.o		\
	Grid_AccelerationBoundaryRoutines.o		\
	Grid_AddBaryonsToGravitatingMassField.o		\
	Grid_AddExternalAcceleration.o			\
	Grid_AddFieldMassToMassFlaggingField.o		\
	Grid_AddOverlappingParticleMassField.o		\
	Grid_AddRandomForcing.o				\
	Grid_AddToBoundaryFluxes.o			\
	Grid_AllocateGrids.o				\
	Grid_AnalyzeTrackPeaks.o			\
	Grid_AppendForcingToBaryonFields.o		\
	Grid_ApplyTimeAction.o				\
	Grid_CalculateAngularMomentum.o			\
	Grid_CheckForOverlap.o				\
	Grid_CheckForPossibleOverlap.o			\
	Grid_CheckForSharedFace.o			\
	Grid_CleanUp.o					\
	Grid_CleanUpMovedParticles.o			\
	Grid_ClearBoundaryFluxes.o			\
	Grid_ClearFlaggingField.o			\
	Grid_ClearGravitatingMassField.o		\
	Grid_ClearGravitatingMassFieldParticles.o	\
	Grid_ClearMassFlaggingField.o			\
	Grid_ClearParticleAccelerations.o		\
	Grid_CollapseTestInitializeGrid.o		\
	Grid_CollectGridInformation.o			\
	Grid_CommunicationMoveGrid.o			\
	Grid_Irecv_CommunicationSendParticles.o	\
	$(MGM)Grid_Irecv_CommunicationSendRegion.o	\
	Grid_Irecv_CommunicationReceiveRegion.o	\
	Grid_CommunicationTransferParticles.o		\
	Grid_ComovingExpansionTerms.o			\
	Grid_ComovingGravitySourceTerm.o		\
	Grid_ComputeAccelerationField.o			\
	Grid_ComputeAccelerationFieldExternal.o		\
	Grid_ComputeAccelerations.o			\
	Grid_ComputeCoolingTime.o			\
	Grid_ComputeElementalDensity.o			\
	Grid_ComputeEnergy.o				\
	Grid_ComputeGammaField.o			\
	Grid_ComputePressure.o				\
	Grid_ComputePressureDualEnergyFormalism.o	\
	Grid_ComputeTemperatureField.o			\
	Grid_ComputeTimeStep.o				\
	Grid_ComputeXrayEmissivity.o			\
	Grid_ConvertTotalEnergyToGasEnergy.o		\
	Grid_CopyOverlappingMassField.o			\
	Grid_CopyParentToGravitatingFieldBoundary.o	\
	Grid_CopyBaryonFieldToOldBaryonField.o		\
	Grid_CopyPotentialField.o			\
	Grid_CopyPotentialToBaryonField.o		\
	Grid_CopyZonesFromGrid.o			\
	Grid_CopyZonesFromGridCountOnly.o		\
	Grid_CorrectForRefinedFluxes.o			\
	FluxFix_Grid_CorrectForRefinedFluxes.o		\
	Grid_DebugCheck.o				\
	Grid_DeleteAllFields.o				\
	Grid_DeleteFlaggingField.o			\
	Grid_DetachForcingFromBaryonFields.o		\
	Grid_Irecv_DepositBaryons.o			\
	Grid_DepositParticlePositions.o			\
	Grid_DepositPositions.o				\
	Grid_DoubleMachInitializeGrid.o			\
	Grid_FastSiblingLocatorAddGrid.o		\
	Grid_FastSiblingLocatorFindSiblings.o		\
	Grid_FinishFFT.o				\
	Grid_FlagBufferZones.o				\
	Grid_FlagCellsToBeRefinedByCoolingTime.o	\
	Grid_FlagCellsToBeRefinedByJeansLength.o	\
	Grid_FlagCellsToBeRefinedByMass.o		\
	Grid_FlagCellsToBeRefinedByMetallicity.o	\
	Grid_FlagCellsToBeRefinedByMustRefineParticles.o	\
	Grid_FlagCellsToBeRefinedByMustRefineRegion.o	\
	Grid_FlagCellsToBeRefinedBySlope.o		\
	Grid_FlagCellsToBeRefinedByShear.o		\
	Grid_FlagCellsToBeRefinedByShocks.o		\
	Grid_GadgetCalculateCooling.o 			\
	Grid_GadgetComputeTemperatureDEF.o 		\
	Grid_GadgetComputeTemperature.o 		\
	Grid_Gadgetconvertutotemp.o 			\
	Grid_GadgetCoolingRateFromU.o 			\
	Grid_GadgetCoolingRate.o 			\
	Grid_GadgetCoolingTime.o			\
	Grid_GadgetEquilibriumCooling.o 		\
	Grid_Gadgetfindabundancesandrates.o 		\
	Grid_GetProjectedBoundaryFluxes.o		\
	Grid_GravityEquilibriumTestInitializeGrid.o	\
	Grid_IdentifyNewSubgrids.o			\
	Grid_IdentifyNewSubgridsSmall.o			\
	Grid_IdentifyPhysicalQuantities.o		\
	Grid_IdentifySpeciesFields.o			\
	Grid_ImplosionInitializeGrid.o			\
	Grid_InheritProperties.o			\
	Grid_InitializeGravitatingMassField.o		\
	Grid_InitializeGravitatingMassFieldParticles.o	\
	Grid_InitializeUniformGrid.o			\
	Grid_InterpolateAccelerations.o			\
	Grid_InterpolateBoundaryFromParent.o		\
	Grid_InterpolateFieldValues.o			\
	Grid_InterpolateParticlePositions.o		\
	Grid_InterpolatePositions.o			\
	Grid_MoveAllParticles.o				\
	Grid_MoveSubgridParticles.o			\
	Grid_MoveSubgridParticlesFast.o			\
	Grid_OutputAsParticleData.o			\
	Grid_OutputGridMovieData.o			\
	Grid_OutputStarParticleInformation.o		\
	Grid_PrepareBoundaryFluxes.o			\
	Grid_PrepareFFT.o				\
	Grid_PrepareGreensFunction.o			\
	Grid_PreparePeriodicGreensFunction.o		\
	Grid_PrepareGrid.o				\
	Grid_PrepareGridDerivedQuantities.o		\
	Grid_PreparePotentialField.o			\
	Grid_PrepareRandomForcingNormalization.o	\
	Grid_PressurelessCollapseInitialize.o		\
	Grid_ProjectSolutionToParentGrid.o		\
	Grid_ProjectToPlane.o				\
	Grid_RadiationComputeDensities.o		\
	Grid_ReturnFluxDims.o				\
	Grid_ReturnGridInfo.o				\
	Grid_RemoveForcingFromBaryonFields.o		\
	Grid_RestoreEnergyConsistency.o			\
	Grid_SedovBlastInitializeGrid.o			\
	Grid_SetExternalBoundaryValues.o		\
	Grid_SetFlaggingField.o				\
	Grid_SetFlaggingFieldStaticRegions.o		\
	Grid_SetIsolatedPotentialBoundary.o		\
	Grid_SetMinimumSupport.o			\
	Grid_ShockTubeInitializeGrid.o			\
	Grid_SolveForPotential.o			\
	Grid_SolveHydroEquations.o			\
	Grid_SolveRadiativeCooling.o			\
	Grid_SolveRateEquations.o			\
	Grid_SortParticlesByNumber.o			\
	Grid_SphericalInfallGetProfile.o		\
	Grid_SphericalInfallInitializeGrid.o		\
	Grid_StarParticleHandler.o			\
	Grid_SupernovaRestartInitialize.o		\
	Grid_TestGravityCheckResults.o			\
	Grid_TestGravitySphereCheckResults.o		\
	Grid_TestGravityInitializeGrid.o		\
	Grid_TestGravityMotionInitializeGrid.o		\
	Grid_TestGravitySphereInitializeGrid.o		\
	Grid_TestOrbitInitializeGrid.o			\
	Grid_TracerParticleCreateParticles.o		\
	Grid_TracerParticleOutputData.o			\
	Grid_TracerParticleSetVelocity.o		\
	Grid_UpdateParticlePosition.o			\
	Grid_UpdateParticleVelocity.o			\
	Grid_WriteCube.o				\
	Grid_WriteCubeInterpolate.o			\
	Grid_WriteGridInterpolate.o			\
	Grid_WriteNewMovieData.o			\
	Grid_WriteStuff.o				\
	Grid_ZeldovichPancakeInitializeGrid.o		\
	Grid_ZeroSolutionUnderSubgrid.o			\
	Grid_constructor.o				\
	Grid_destructor.o				\
	Hierarchy_DeleteHierarchyEntry.o		\
	IdentifyNewSubgridsBySignature.o		\
	ImplosionInitialize.o				\
	InitializeEquilibriumCoolData.o			\
	InitializeGadgetEquilibriumCoolData.o 		\
	XX_InitializeNew.o				\
	InitializeRadiationFieldData.o			\
	InitializeRateData.o				\
	InterpretCommandLine.o				\
	Isdigit.o					\
	LevelHierarchy_AddLevel.o			\
	ListIO.o					\
	MemoryAllocationRoutines.o			\
	MultigridSolver.o				\
	OutputLevelInformation.o			\
	FastSib_PrepareGravitatingMassField.o		\
	PrepareIsolatedGreensFunction.o			\
	PressurelessCollapseInitialize.o		\
	ProcMap.o					\
	ProtoSubgrid_AcceptableGrid.o			\
	ProtoSubgrid_CleanUp.o				\
	ProtoSubgrid_ComputeSecondDerivative.o		\
	ProtoSubgrid_ComputeSignature.o			\
	ProtoSubgrid_CopyFlaggedZonesFromGrid.o		\
	ProtoSubgrid_CopyToNewSubgrid.o			\
	ProtoSubgrid_FindGridsByZeroSignature.o		\
	ProtoSubgrid_ReturnNthLongestDimension.o	\
	ProtoSubgrid_ShrinkToMinimumSize.o		\
	ProtoSubgrid_constructor.o			\
	QuickSortAndDrag.o				\
	RadiationFieldCalculateRates.o			\
	RadiationFieldUpdate.o				\
	ReadAllData.o					\
	ReadDataHierarchy.o				\
	ReadParameterFile.o				\
	ReadRadiationData.o				\
	ReadStarParticleData.o				\
	ReadUnits.o					\
	FastSib_RebuildHierarchy.o			\
	ReduceFragmentation.o				\
	ReportMemoryUsage.o				\
	SedovBlastInitialize.o				\
	SetDefaultGlobalValues.o			\
	ShockInABoxInitialize.o				\
	ShockPoolInitialize.o				\
	ShockTubeInitialize.o				\
	SphericalInfallInitialize.o			\
	SupernovaRestartInitialize.o			\
	SysMkdir.o					\
	TestGravityCheckResults.o			\
	TestGravityInitialize.o				\
	TestGravityMotion.o				\
	TestGravitySphereInitialize.o			\
	TestGravitySphereCheckResults.o			\
	TestOrbitInitialize.o				\
	TracerParticleCreation.o			\
	TurbulenceSimulationInitialize.o		\
	UnigridCommunicationTranspose.o			\
	UpdateParticlePositions.o			\
	WavePoolInitialize.o				\
	$(PG)SRB_WriteAllData.o				\
	WriteAllDataCubes.o				\
	WriteDataCubes.o				\
	WriteDataHierarchy.o				\
	WriteHierarchyStuff.o				\
	WriteMovieData.o				\
	WriteParameterFile.o				\
	WriteRadiationData.o				\
	WriteStarParticleData.o				\
	WriteStreamData.o				\
	WriteTracerParticleData.o			\
	WriteUnits.o					\
	ZeldovichPancakeInitialize.o			\
	CloudyCoolingGridRoutines.o                     \
	solve_CloudyCooling.o                           \
	solve_CloudyCooling_time.o                      \
	multi_CloudyCooling.o                           \
	multi_CloudyCooling_time.o                      \
	FCol.o						\
	PCol.o						\
	ICol.o						\
	arcsinh.o					\
	arccosh.o					\
	flow.o						\
	c_message.o					\
	mused.o						\
	performance.o					\
	Options.o					\
	X_Main.o					\
        calc_dt.o                                       \
	calc_photo_rates.o				\
	calc_rad.o					\
	calc_rates.o					\
        calcdiss.o					\
	chtable.o					\
	cicinterp.o					\
	cic_deposit.o					\
	cic_flag.o					\
	cic_interp.o					\
	colh2diss.o					\
	coll_rates.o					\
	comp_accel.o					\
	cool1d.o					\
	cool1d_multi.o					\
	cool_multi_time.o				\
	cool_time.o					\
        euler.o						\
        expand_terms.o                                  \
	fft_utils.o					\
	fortio.o					\
	fft66.o						\
	fourn.o						\
	power_of_2.o					\
	prefort2.o					\
	fortfft3d-mac.o				        \
	cray_x1_fft64.o					\
	ibm_fft64.o					\
	nr_1d.o						\
	nr_2d.o						\
	nr_3d.o						\
	wrapper1d.o					\
	wrapper2d.o					\
	wrapper3d.o					\
	rotate2d.o					\
	rotate3d.o					\
	nr_st1.o					\
	s66_st1.o					\
	ibm_st1_fft64.o					\
	sgi_st1_fft64.o					\
	grid_cic.o					\
	int_lin3d.o					\
	int_spline.o					\
	interp1d.o					\
	interp2d.o					\
	interp3d.o					\
	interpolate.o					\
        inteuler.o					\
        intlgrg.o                                       \
        intrmp.o                                        \
        intvar.o                                        \
        lgrg.o                                          \
	mcooling.o					\
	mg_calc_defect.o				\
	mg_prolong.o					\
	mg_prolong2.o					\
	mg_relax.o					\
	mg_restrict.o					\
	mpi_error_file-thunderhead.o			\
	stop_all_cpus-thunderhead.o			\
	multi_cool.o					\
	ngpinterp.o					\
        pgas2d.o					\
        pgas2d_dual.o					\
        ppm_de.o					\
        ppm_lr.o					\
	project.o					\
	projplane.o					\
	prolong.o					\
	prolong_tsc.o					\
	ran1.o						\
        remap.o                                         \
	smooth.o					\
	smooth_deposit.o				\
	solve_cool.o					\
	solve_rate.o					\
	star_maker1.o					\
	star_maker2.o					\
	star_maker3.o					\
	star_maker4.o					\
	star_maker5.o					\
        tscint1d.o					\
        tscint2d.o					\
        tscint3d.o					\
        twoshock.o					\
	utilities.o					\
        xeuler_sweep.o					\
        xlagrange_sweep.o                               \
        yeuler_sweep.o					\
        ylagrange_sweep.o                               \
        zeuler_sweep.o                                  \
	zeus_main.o					\
	zeus_utilities.o				\
	zeus_source.o					\
	zeus_xtransport.o				\
	zeus_ytransport.o				\
	zeus_ztransport.o				\
        zlagrange_sweep.o 				\
	wall_clock.o

H5OBJ =	EB_REB.o	\
	EB_WEB.o	\
	write_bt.o	\
	write_bv.o	\
	read_bt.o	\
	read_bv.o	\
	CosmologySimulationInitializeGrid.o 		\
	Grid_TurbulenceSimulationInitializeHDF5.o	\
        NestedCosmologySimulationInitializeGrid.o       \
	$(IOP)$(PG)HDF5_Grid_ReadGrid.o			\
	$(IOP)$(PG)SRB_HDF5_Grid_WriteGrid.o		\
	SRB_HDF5_Grid_WriteGridX.o			\
	HDF5_Grid_ReadRandomForcingFields.o		\
	HDF5_ExtractSection.o				\
	HDF5_OutputAsParticleData.o			\
	HDF5_ProjectToPlane.o				\
	HDF5_ReadAttr.o					\
	HDF5_ReadFile.o					\
	HDF5_ReadIntFile.o				\
	HDF5_WriteStringAttr.o

SROBJ = SRB_FileMover.o					\
	SRB_MakeDir.o					\
	SRB_Mkdir.o					\
	SRB_Clean.o					\
	SRB_Delete.o					\
	SRB_Mover.o					\
	SRB_Put.o

SDOBJ = SRB_DummyMakeDir.o				\
	SRB_DummyFileMover.o


ifeq ($(ENZO_HDF),$(hdf5))
# EXENAME := enzo5
  ifeq ($(ENZO_SRB),$(no_srb))
    OBJ     := ${F90X} ${XOBJ} ${H5OBJ} ${SDOBJ} 
  else
    OBJ     := ${F90X} ${XOBJ} ${H5OBJ} ${SROBJ}
  endif
endif

PRECISION = dummy


#-------------------  macro definitions -------------------------------

.SUFFIXES:
.SUFFIXES: .src .src90 .c .f .o .C

HEADER  = CosmologyParameters.h ExternalBoundary.h Fluxes.h \
	  Grid.h GridList.h Hierarchy.h LevelHierarchy.h ProtoSubgrid.h \
	  TopGridData.h global_data.h macros_and_parameters.h typedefs.h region.h \
	  CoolData.h RateData.h StarParticleData.h RadiationFieldData.h \
	  fortran.def

EXEDIR  =

#------------------ include machine-dependent macros -----------------

TOPDIR = ../..
INCLUDE_MAKEFILE = $(TOPDIR)/MakeMacros/Parallel/Make.${ENZO_ARCH}.${ENZO_MESS}
include ${INCLUDE_MAKEFILE}

#--------------------  implicit rules ---------------------------------

.src90.o:
	${CPP} -D${ENZO_PPR} ${DEFINES} -D${ENZO_XPR} -P ${CPP_FLAG} $< > $*.f90
	${FC} ${F90SRC} ${FFLAGS} ${FC_OPT} ${FREE90} ${FORTPR} ${DEBUG} ${OPTS} $*.f90
.src.o:
	${CPP} -D${ENZO_PPR} ${DEFINES} -D${ENZO_XPR} -P ${CPP_FLAG} $< > $*.f
	${FC} ${FFLAGS} ${FC_OPT} ${FORTPR} ${DEBUG} ${OPTS} $*.f 
.C.o:
	${CCxx} ${CCxxFLAGS} ${CCxx_OPT} ${AMR_OPT} ${OOC_OPT} -D${ENZO_INT} -D${INIT_PPR} -D${ENZO_PPR} -D${ENZO_XPR} -D${ENZO_END} -D${UNIGRID} -D ${TRACEFLAG} -D $(GRAVFLAG) ${DEBUG} ${OPTS} $*.C
.c.o:
	${CC} ${CFLAGS} ${CC_OPT} -D${ENZO_INT} -D${ENZO_PPR} -D${ENZO_XPR} -D${ENZO_END} ${DEBUG} ${OPTS} -c $<

#-------------------------  main target  -------------------------------

${EXENAME}: ${OBJ}
	${LDR} ${LDR_OPT} ${DEBUG} -o ${EXEDIR}${EXENAME} ${OBJ} ${LIB}

#---------------------  special compilation rules ---------------------


#----------------------------- help ------------------------------------

help:
	@echo Type 'make' to generate executable
	@echo Type 'make clean' to remove object files, etc

#----------------------------- clean ------------------------------------

clean:
	rm -f *.o *.mod *.f *.f90 *~ enzo5 enzo5u

#-----------------------------------------------------------------------

${OBJ}: ${HEADER}
